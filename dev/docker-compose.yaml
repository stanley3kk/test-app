services:
#  mysql_container:
#    image: mysql:8.0
#    container_name: mysql
#    restart: always
#    environment:
#      MYSQL_DATABASE: 'app'
#      MYSQL_USER: 'username'
#      MYSQL_PASSWORD: 'password'
#      MYSQL_ROOT_PASSWORD: 'rootpassword'
#    ports:
#      - 3306:3306
#    volumes:
#      - ./mysql_container_init/:/docker-entrypoint-initdb.d
#      - mysql-data:/var/lib/mysql
#    platform: linux/amd64ㄹㄴㄹㅇㄴㄹㅇㄴㄹㄴㅇ
#  mongodb:
#    container_name: mongodb
#    image: mongo:5.0
#    ports:
#      - "27017:27017"
  zookeeper:
    image: confluentinc/cp-zookeeper:7.9.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
  kafka:
    image: confluentinc/cp-kafka:7.9.1
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 9093:9093
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: SASL_PLAINTEXT://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: SASL_PLAINTEXT:SASL_PLAINTEXT
      KAFKA_SECURITY_INTER_BROKER_PROTOCOL: SASL_PLAINTEXT
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_SASL_ENABLED_MECHANISMS: SCRAM-SHA-512,PLAIN
      KAFKA_CONFLUENT_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/configs/kafka_server_jaas.conf"
    volumes:
      - ./kafka_server_jaas.conf:/etc/kafka/configs/kafka_server_jaas.conf
volumes:
  mysql-data: